{ parameter
    (or (or (chest %commit) (pair %reset (nat %max) (nat %min)))
        (pair %reveal chest_key nat)) ;
  storage
    (pair (pair (pair (map %decoded_payloads address bytes) (nat %last_seed))
                (pair (map %locked_tez address mutez) (nat %max)))
          (pair (pair (nat %min) (set %participants address))
                (pair (option %result_nat nat) (map %secrets address chest)))) ;
  code { LAMBDA
           bytes
           nat
           { PUSH string "Can only convert 1 byte" ;
             PUSH nat 1 ;
             DUP 3 ;
             SIZE ;
             COMPARE ;
             EQ ;
             IF { DROP } { FAILWITH } ;
             PUSH bool False ;
             PUSH bool False ;
             PUSH bytes 0x00 ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 2 ; PUSH bool True ; PUSH bool False ; PUSH nat 0 ; PAIR ; PAIR }
                { SWAP ; PUSH nat 0 ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x01 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 1 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x02 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 2 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x03 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 3 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x04 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 4 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x05 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 5 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x06 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 6 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x07 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 7 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x08 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 8 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x09 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 9 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x0a ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 10 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x0b ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 11 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x0c ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 12 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x0d ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 13 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x0e ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 14 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x0f ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 15 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x10 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 16 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x11 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 17 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x12 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 18 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x13 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 19 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x14 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 20 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x15 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 21 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x16 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 22 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x17 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 23 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x18 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 24 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x19 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 25 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x1a ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 26 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x1b ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 27 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x1c ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 28 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x1d ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 29 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x1e ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 30 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x1f ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 31 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x20 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 32 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x21 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 33 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x22 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 34 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x23 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 35 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x24 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 36 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x25 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 37 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x26 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 38 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x27 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 39 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x28 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 40 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x29 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 41 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x2a ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 42 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x2b ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 43 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x2c ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 44 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x2d ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 45 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x2e ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 46 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x2f ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 47 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x30 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 48 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x31 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 49 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x32 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 50 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x33 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 51 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x34 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 52 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x35 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 53 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x36 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 54 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x37 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 55 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x38 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 56 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x39 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 57 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x3a ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 58 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x3b ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 59 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x3c ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 60 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x3d ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 61 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x3e ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 62 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x3f ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 63 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x40 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 64 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x41 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 65 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x42 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 66 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x43 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 67 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x44 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 68 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x45 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 69 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x46 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 70 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x47 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 71 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x48 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 72 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x49 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 73 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x4a ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 74 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x4b ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 75 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x4c ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 76 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x4d ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 77 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x4e ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 78 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x4f ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 79 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x50 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 80 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x51 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 81 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x52 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 82 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x53 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 83 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x54 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 84 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x55 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 85 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x56 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 86 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x57 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 87 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x58 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 88 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x59 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 89 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x5a ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 90 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x5b ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 91 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x5c ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 92 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x5d ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 93 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x5e ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 94 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x5f ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 95 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x60 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 96 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x61 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 97 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x62 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 98 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x63 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 99 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x64 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 100 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x65 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 101 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x66 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 102 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x67 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 103 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x68 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 104 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x69 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 105 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x6a ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 106 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x6b ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 107 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x6c ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 108 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x6d ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 109 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x6e ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 110 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x6f ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 111 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x70 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 112 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x71 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 113 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x72 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 114 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x73 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 115 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x74 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 116 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x75 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 117 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x76 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 118 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x77 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 119 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x78 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 120 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x79 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 121 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x7a ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 122 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x7b ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 123 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x7c ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 124 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x7d ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 125 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x7e ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 126 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x7f ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 127 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x80 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 128 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x81 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 129 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x82 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 130 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x83 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 131 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x84 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 132 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x85 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 133 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x86 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 134 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x87 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 135 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x88 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 136 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x89 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 137 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x8a ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 138 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x8b ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 139 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x8c ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 140 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x8d ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 141 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x8e ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 142 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x8f ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 143 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x90 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 144 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x91 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 145 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x92 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 146 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x93 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 147 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x94 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 148 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x95 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 149 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x96 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 150 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x97 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 151 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x98 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 152 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x99 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 153 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x9a ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 154 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x9b ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 155 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x9c ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 156 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x9d ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 157 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x9e ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 158 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0x9f ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 159 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xa0 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 160 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xa1 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 161 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xa2 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 162 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xa3 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 163 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xa4 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 164 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xa5 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 165 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xa6 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 166 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xa7 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 167 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xa8 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 168 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xa9 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 169 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xaa ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 170 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xab ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 171 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xac ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 172 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xad ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 173 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xae ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 174 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xaf ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 175 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xb0 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 176 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xb1 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 177 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xb2 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 178 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xb3 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 179 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xb4 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 180 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xb5 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 181 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xb6 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 182 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xb7 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 183 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xb8 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 184 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xb9 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 185 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xba ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 186 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xbb ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 187 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xbc ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 188 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xbd ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 189 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xbe ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 190 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xbf ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 191 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xc0 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 192 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xc1 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 193 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xc2 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 194 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xc3 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 195 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xc4 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 196 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xc5 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 197 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xc6 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 198 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xc7 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 199 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xc8 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 200 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xc9 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 201 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xca ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 202 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xcb ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 203 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xcc ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 204 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xcd ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 205 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xce ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 206 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xcf ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 207 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xd0 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 208 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xd1 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 209 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xd2 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 210 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xd3 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 211 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xd4 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 212 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xd5 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 213 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xd6 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 214 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xd7 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 215 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xd8 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 216 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xd9 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 217 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xda ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 218 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xdb ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 219 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xdc ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 220 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xdd ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 221 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xde ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 222 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xdf ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 223 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xe0 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 224 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xe1 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 225 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xe2 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 226 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xe3 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 227 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xe4 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 228 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xe5 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 229 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xe6 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 230 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xe7 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 231 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xe8 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 232 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xe9 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 233 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xea ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 234 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xeb ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 235 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xec ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 236 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xed ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 237 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xee ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 238 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xef ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 239 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xf0 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 240 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xf1 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 241 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xf2 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 242 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xf3 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 243 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xf4 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 244 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xf5 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 245 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xf6 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 246 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xf7 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 247 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xf8 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 248 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xf9 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 249 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xfa ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 250 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xfb ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 251 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xfc ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 252 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xfd ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 253 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xfe ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 254 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             PUSH bytes 0xff ;
             DIG 4 ;
             COMPARE ;
             EQ ;
             PUSH bool True ;
             DUP 4 ;
             COMPARE ;
             EQ ;
             NOT ;
             AND ;
             PUSH bool True ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP 3 ; PUSH bool True ; PUSH bool False ; PUSH nat 255 ; PAIR ; PAIR }
                { DIG 2 ; CAR ; CAR ; PAIR ; PAIR } ;
             PUSH bool True ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             COMPARE ;
             EQ ;
             NOT ;
             PUSH bool True ;
             DUP 3 ;
             CAR ;
             CDR ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DROP ; PUSH string "Wrong hexa" ; FAILWITH } { CAR ; CAR } } ;
         PUSH string "Not authorized" ;
         PUSH string "Missing some chest" ;
         DUP 4 ;
         CDR ;
         DIG 4 ;
         CAR ;
         IF_LEFT
           { DIG 2 ;
             DIG 4 ;
             DROP 2 ;
             IF_LEFT
               { PAIR ;
                 DUP ;
                 CDR ;
                 DIG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 SENDER ;
                 MEM ;
                 IF { DROP } { FAILWITH } ;
                 PUSH string "You must lock 10mutez" ;
                 PUSH mutez 10 ;
                 AMOUNT ;
                 COMPARE ;
                 GE ;
                 IF { DROP } { FAILWITH } ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 SENDER ;
                 GET ;
                 IF_NONE
                   { DUP ; CDR ; CDR ; CDR ; DIG 2 ; CAR ; SOME ; SENDER ; UPDATE }
                   { DIG 2 ;
                     DROP 2 ;
                     PUSH string "Sender has already committed its chest" ;
                     FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 GET ;
                 IF_NONE
                   { SWAP ; DUP ; DUG 2 ; CAR ; CDR ; CAR ; AMOUNT ; SOME ; SENDER ; UPDATE }
                   { DUP 3 ; CAR ; CDR ; CAR ; AMOUNT ; DIG 2 ; ADD ; SOME ; SENDER ; UPDATE } ;
                 SWAP ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { DIG 2 ;
                 DROP ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 PUSH string "You must not send tez (reset entrypoint)" ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 IF { DROP } { FAILWITH } ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 EMPTY_MAP address bytes ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 EMPTY_MAP address chest ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 NONE nat ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 DUP 4 ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } }
           { PAIR ;
             DUP ;
             CDR ;
             SENDER ;
             PUSH string "You must not send tez (reveal entrypoint)" ;
             PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             EQ ;
             IF { DROP } { FAILWITH } ;
             DIG 4 ;
             DUP 3 ;
             CDR ;
             CAR ;
             CDR ;
             DUP 3 ;
             MEM ;
             IF { DROP } { FAILWITH } ;
             PUSH bool True ;
             DUP 3 ;
             CDR ;
             CAR ;
             CDR ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DUP 4 ;
                    CDR ;
                    CDR ;
                    CDR ;
                    DIG 2 ;
                    CDR ;
                    GET ;
                    IF_NONE { PUSH bool False ; AND } { DROP ; PUSH bool True ; AND } } ;
             DUP 5 ;
             PUSH bool True ;
             DIG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP } { FAILWITH } ;
             DIG 2 ;
             CAR ;
             UNPAIR ;
             DUP 4 ;
             CDR ;
             CDR ;
             CDR ;
             DUP 4 ;
             GET ;
             IF_NONE { DIG 4 ; FAILWITH } { DIG 5 ; DROP } ;
             DIG 2 ;
             SWAP ;
             DIG 2 ;
             OPEN_CHEST ;
             IF_LEFT
               { RIGHT (or unit unit) }
               { IF { UNIT ; LEFT unit ; LEFT bytes } { UNIT ; RIGHT unit ; LEFT bytes } } ;
             IF_LEFT
               { IF_LEFT
                   { DROP ; PUSH string "Could not open chest: Fail_decrypt" ; FAILWITH }
                   { DROP ; PUSH string "Could not open chest: Fail_timelock" ; FAILWITH } }
               {} ;
             DUP 3 ;
             CAR ;
             CAR ;
             CAR ;
             DIG 2 ;
             GET ;
             IF_NONE
               { SWAP ; DUP ; DUG 2 ; CAR ; CAR ; CAR ; SWAP ; SOME ; SENDER ; UPDATE }
               { DROP 2 ; PUSH string "Chest already revealed" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CAR ;
             SENDER ;
             GET ;
             IF_NONE
               { PUSH string "User shold have locked some tez during commit chest phase" ;
                 FAILWITH }
               { DUP 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PUSH mutez 10 ;
                 DIG 2 ;
                 SUB ;
                 SOME ;
                 SENDER ;
                 UPDATE } ;
             SENDER ;
             CONTRACT unit ;
             IF_NONE { PUSH string "Unknown user account" ; FAILWITH } {} ;
             PUSH mutez 10 ;
             UNIT ;
             TRANSFER_TOKENS ;
             PUSH bool True ;
             DUP 5 ;
             CDR ;
             CAR ;
             CDR ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DUP 5 ;
                    DIG 2 ;
                    CDR ;
                    GET ;
                    IF_NONE { PUSH bool False ; AND } { DROP ; PUSH bool True ; AND } } ;
             PUSH bool True ;
             SWAP ;
             COMPARE ;
             EQ ;
             IF { DUP 4 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DUP 5 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  PAIR ;
                  DUP 5 ;
                  CDR ;
                  CAR ;
                  CAR ;
                  DUP 5 ;
                  PAIR ;
                  PAIR ;
                  NIL bytes ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CAR ;
                  ITER { CDR ; KECCAK ; CONS } ;
                  NONE bytes ;
                  SWAP ;
                  ITER { SWAP ; IF_NONE { SOME } { SWAP ; CONCAT ; KECCAK ; SOME } } ;
                  IF_NONE
                    { DIG 5 ; DROP ; PUSH string "could not construct a hash" ; FAILWITH }
                    { DUP ;
                      SIZE ;
                      PUSH nat 0 ;
                      PAIR ;
                      PAIR ;
                      LEFT nat ;
                      LOOP_LEFT
                        { DUP ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          DIG 2 ;
                          CDR ;
                          PUSH nat 1 ;
                          DUP 3 ;
                          COMPARE ;
                          EQ ;
                          IF { SWAP ; DROP ; DUP 8 ; SWAP ; EXEC ; ADD ; RIGHT (pair (pair nat nat) bytes) }
                             { DUP ;
                               PUSH nat 1 ;
                               DUP 3 ;
                               SIZE ;
                               SUB ;
                               ABS ;
                               PUSH nat 1 ;
                               SLICE ;
                               IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
                               PUSH nat 1 ;
                               DUP 4 ;
                               SUB ;
                               ABS ;
                               PUSH nat 256 ;
                               PUSH nat 1 ;
                               PAIR ;
                               PAIR ;
                               LEFT nat ;
                               LOOP_LEFT
                                 { DUP ;
                                   CAR ;
                                   CAR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CDR ;
                                   DIG 2 ;
                                   CDR ;
                                   PUSH nat 0 ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   COMPARE ;
                                   EQ ;
                                   IF { DROP 2 ; RIGHT (pair (pair nat nat) nat) }
                                      { PUSH nat 1 ;
                                        SWAP ;
                                        SUB ;
                                        ABS ;
                                        SWAP ;
                                        DUP ;
                                        DIG 3 ;
                                        MUL ;
                                        PAIR ;
                                        PAIR ;
                                        LEFT nat } } ;
                               DIG 2 ;
                               PUSH nat 1 ;
                               PUSH nat 0 ;
                               SLICE ;
                               IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
                               DUP 11 ;
                               SWAP ;
                               EXEC ;
                               MUL ;
                               SWAP ;
                               PUSH nat 1 ;
                               DIG 3 ;
                               SUB ;
                               ABS ;
                               DIG 2 ;
                               DIG 3 ;
                               ADD ;
                               PAIR ;
                               PAIR ;
                               LEFT nat } } ;
                      DIG 6 ;
                      DROP } ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CAR ;
                  DUP 3 ;
                  CAR ;
                  CDR ;
                  PAIR ;
                  SWAP ;
                  DIG 2 ;
                  CDR ;
                  CDR ;
                  PAIR ;
                  PAIR ;
                  DUP ;
                  CDR ;
                  CAR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CDR ;
                  DUP 3 ;
                  CAR ;
                  CAR ;
                  PUSH nat 23 ;
                  DUP 3 ;
                  LSL ;
                  DIG 2 ;
                  XOR ;
                  PUSH nat 17 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  LSL ;
                  XOR ;
                  PUSH nat 26 ;
                  DUP 3 ;
                  LSL ;
                  DUP 3 ;
                  DIG 2 ;
                  XOR ;
                  XOR ;
                  ADD ;
                  SWAP ;
                  DUP ;
                  PUSH nat 1 ;
                  DIG 4 ;
                  CDR ;
                  CDR ;
                  ADD ;
                  SUB ;
                  DUP 3 ;
                  EDIV ;
                  IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                  CDR ;
                  ADD ;
                  SWAP ;
                  PAIR ;
                  DUP 5 ;
                  CDR ;
                  DUP 6 ;
                  CAR ;
                  CDR ;
                  DIG 6 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DIG 6 ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  DIG 5 ;
                  PAIR ;
                  DIG 2 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  DUP ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DUP 3 ;
                  CDR ;
                  SOME ;
                  PAIR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CDR ;
                  DIG 3 ;
                  CAR ;
                  DIG 3 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  NIL operation ;
                  DIG 2 ;
                  CONS ;
                  PAIR }
                { DIG 4 ;
                  DROP ;
                  DUP 4 ;
                  CDR ;
                  DUP 5 ;
                  CAR ;
                  CDR ;
                  DIG 5 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DIG 5 ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  DIG 4 ;
                  PAIR ;
                  DIG 2 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  NIL operation ;
                  DIG 2 ;
                  CONS ;
                  PAIR } } } }

